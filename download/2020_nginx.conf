
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /var/run/nginx.pid;

# Load dynamic modules. See /usr/share/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections  1024;
}


http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    log_format nginx_log '$remote_addr"[$time_local]"$request"$status"$body_bytes_sent"'
                         '$http_referer"$http_user_agent"$http_x_forwarded_for"'
                         '$request_time"$upstream_addr"$host"$request_body';



    log_format  access_log_json   '{"@timestamp":"$time_iso8601",'
                 '"host":"$server_addr",'
                 '"clientip":"$remote_addr",'
                 '"size":$body_bytes_sent,'
                 '"responsetime":$request_time,'
                 '"upstreamtime":"$upstream_response_time",'
                 '"upstreamhost":"$upstream_addr",'
                 '"http_host":"$host",'
                 '"url":"$uri",'
                 '"xff":"$http_x_forwarded_for",'
                 '"referer":"$http_referer",'
                 '"agent":"$http_user_agent",'
                 '"status":"$status"}'

    #access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;


    gzip on;
    gzip_min_length  1k;
    gzip_buffers     4 8k;
    gzip_http_version 1.1;
    gzip_types       text/plain application/x-javascript text/css  text/javascript application/xml application/javascript;


    expires     24h;
    add_header  Cache-Control  private;


    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    include /etc/nginx/conf.d/*.conf;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
	}

    ####################################
    ### nginx缓存全局设置
    ####################################
    ## 建立nginx缓存目录，通过计算所有项目大小，最大大小设置为2G
    ## 目录等级为2级,cache名cache1,10M共享内存，1天未被访问从cache清除，目录大小2G。
    proxy_cache_path /etc/nginx/proxy_cache levels=1:2 keys_zone=cache1:10m inactive=1d max_size=2G;

    ## 临时转发目录，如果不添加，以下是默认，为了确保和proxy_cache在同一分区，所以手动添加一条记录。
    proxy_temp_path  /etc/nginx/proxy_temp 1 2;

    ## 当后端服务器出现如下情况时，返回cache中的内容
    proxy_cache_use_stale   http_502 http_503 http_504 timeout;

    ## 200 304状态缓存10分钟，其他状态缓存1分钟。
    proxy_cache_valid       200 304 10m;
    proxy_cache_valid       any     1m;

    ## 以下任意参数不为空或不为0，都不使用cache。
    proxy_cache_bypass      $cookie_nocache $arg_nocache$arg_comment;

    ## cache关键字格式
    proxy_cache_key         $host$uri$is_args$args;


    proxy_redirect          off;
    ## 设置全局http头，使后端获取到客户端真实IP和域名，如果server或location标签内设置任意一条proxy_set_header记录，
    ## 以下所有proxy_set_header设置将被重写。
    proxy_set_header        Host $host;
    proxy_set_header        X-Real-IP $remote_addr;
    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    ## 设置全局客户端最大内容限制，一般为上传限制,默认值1m
    client_max_body_size    1m;
    client_body_buffer_size 128k;
    proxy_connect_timeout   3;
    proxy_send_timeout      10;
    proxy_read_timeout      10;
    proxy_buffer_size       4k;
    proxy_buffers           4 32k;
    proxy_busy_buffers_size 64k;
    proxy_temp_file_write_size 64k;
    proxy_next_upstream http_502 http_504 error timeout invalid_header;






server  {
	listen		80;
	server_name	pooks.cn;
	root  		/usr/share/nginx/html;
	index		1.html ;

	access_log  /var/log/nginx/access_${server_name}.log  access_log_json ;

	location / {

    }

}




}
